/////////////......jQery......////////////////

// можно получать любые атрибуты
var anc = $('a').attr('href');
var img = $('img').attr('src');
var cl = $('.best').attr('style');
var ident = $('li').attr('id');

// можно установить значение атрибута
// указав его в качестве второго параметра
var img2 = $('img').attr('src', '5454454545');

//для удаления любых аттрибутов
$('ul').removeAttr('class');
$('table').removeAttr('style');

//Получение контента 
var val = $('p').text();//только текст
var val2 = $('p').html();//с разметкой
//Установка контента с удалением/замещением
var val = $('em').text('NewText');
var val2 = $('em').html('<del>NewText</del>');
$('#block, #block2').text(one);//нескольким ID
$('#block').fadeOut(one);//при обновлении страницы надпись будет исчезать
// задает стиль элементу display:none
$('.myClass').text(one);//обращение к классу
$('.list li:first-child').text(one);//можно и так
$('.hello').text(one + ', ' + two + '!');//конкатенация
//так можно выбирать из одинаковых классов
//индекс начинается с 0
$('.first:eq(1)').text('fffffffffffff');


//Получение/задавание инфы(value)из/для полей формы
//выпадающих список, радиобаттанов
var val = $('#name').val();
var val = $('#name').val('Moscow');


//Добавление контента без удаления(также можно HTML разметку
// использовать)
$('p').prepend('hello'); //==> <p> hello xxxx </p>
$('p').append('<i>hello</i>'); //==> <p> xxxx hello </p>
// в случае before & after переносится на строки
$('p').before('<b>hello</b>'); //==>  hello <p> xxxx </p>
$('p').after('<div>hello</div>', '<ins>Bye</ins'); //==> <p>  xxxx </p> hello
// В через запятую можно добавлять несколько элементов в качестве аргументов
// также можно создать элемент, а потом вставить его вот так:
var txt = $('<p></p>').text('Hi!');
var add = $('.class2').after(txt);



///////////........работа с CSS......///////////////


// добавили и удалили класс (можно несколько классов)
$("b").removeClass("header");
$('b').addClass('header footer');


//функция переключения классов
$(function() {
	$('button').click(function() {
		$('p').toggleClass('red');
	});
});


// задали стиль через jQuery
$('.blue').css('color', 'yellow');
// также можно задавать много свойств, используя синтаксис JSON
$('.yellow').css({
	'color': 'yellow',
	'background-color': 'black'
});


//так можно получать или устанавливать Ширину и Высоту
//этот способ не включает в себя поля, внутр отступы и рамки
var w = $('.block').width();// получаем ширину
console.log(w);
var h = $('.block').height();// получаем высоту
console.log(h);
$('.block').width(100); // устанавливаем ширину
$('.block').height(200); // устанавливаем ширину
$('.block').width(200).height(300);// либо так
//этот способ включает в себя padding
$('.block').innerWidth(100);
$('.block').innerHeight(200);
//этот способ включает в себя padding & border
$('.block').outerWidth(100);
$('.block').outerHeight(200);
// можно все это соединять вот так
$('div:eq(4)').addClass('block2').text('Some Text').css('background-color', 'red').width(100);


/////..........РАБОТА С DOM.....///////////

//тут выбирается родительский элемент параграфа и для него устанавливается рамка
$('.p-class').parent().css('border', '1px solid red');
// parent() - прямой родительский элемент выбранного элемента
// parents() - все элементы-предки выбранного элемента
// children() - все прямые потомки выбранного элемента
// siblings() - все элементы-братья
// next()/nextAll() -  следующий(все следующие) элемент(-ы)-братья
// prev()/prevAll() -  предыдущий(все предыдущие) элемент(-ы)-братья
// eq() - элемент с определенным номером индекса выбранных элементов
$('.block4').children().eq(1).text('Wohahaha!');

//удаление элементов(удаляет все элементы и потомки)
$('.block5').children().eq(1).remove(); //удалит второй параграф в блоке
// также потомков можно удалить вот так
$('.block5').empty();
//эта функция скопирует блок и добавит его родителю(или любому другому)
$('.redBlock').clone().appendTo('.block6');


/////......события в DOM......//////////

// эта функция выведет по клику дату
$('.block6 .redBlock').click(function() {
	$('body').html(Date());
});
// функция по наведению мыши
$('.block6 .yellowBlock').mouseover(function() {
	$('.yellowBlock').html("Wow!");
	$('.block6 .yellowBlock').mouseleave(function() {
		$('.yellowBlock').text('');
	});
});//фунция по наведению показывает надпись, уводим мышь - убирает надпись
// СОБЫТИЯ МЫШИ
// click - возникае при нажатии на элемент
// dbclick - возникает при двойном нажатии на элемент
// mouseenter - когда появляется над элементом
// mouseleave - покидает элемент
// mouseover - появляется над элементом

// СОБЫТИЯ КЛАВИАТУРЫ
// keydown - при нажатии клавиши
// keyup - при отпускании клавиши

// СОБЫТИЯ ФОРМ
// submit - при подтверждении формы
// change - при измнении значения элемента
// focus - при появлении фокуса на элементе
// blur - при снятии фокуса с элемента

// СОБЫТИЯ ДОКУМЕНТА
// ready - при полной загрузке DOM
// resize - при изменении размера окна браузера
// scroll - когда прокручивает мышью в определенном элементе

//такая форма рекомендуемее, тем более можно связывать несколько событий
$('.block7 .blueBlock').on('click dbclick',  function() {
	alert('clicked');
});
// и убрать событие с элемента
$('.block7 .blueBlock').off('click');

// Каждый обработчик события может принять
// объект события, который содержит свойства и 
// методы, связанные с событием:
// -pageX, pageY положение мыши(X и Y координаты)
// во время возникновения события относительно верхнего
// левого угла страницы.
// - type - тип собятия(например"click")
// - which - кнопка или клавиша, которая была нажата
// - data - любые данные, которые были переданы при 
// выполнении события
// - target - елемент DOM, который инициировал событие
// - preventDefault() - отменяет действие по умолчанию события
// (например, следование по ссылке или отправка формы)
// - stopPropagition() - прекращает дальнейшую передачу текущего события

// выводит, какая клавиша была нажата в поле
$('input').keydown(function(event){
	$('.block7 .redBlock').text(event.which);
});

// функция trigger() инициирует события без нажатия(при загрузке страницы)
//так, к примеру, появляется реклама на страницах
$('.block7 .redBlock').click(function() {
	alert('clicked!');
});
$('.block7 .redBlock').trigger('click');



// создание TO-DO листа
$(function() {
	$('#add').on('click', function() {
		var val = $('input').val(); //принимает значение поле вода и передает переменной
		if(val !== '') { //если введенное не пустое
			var elem = $('<li></li>').text(val); //создается элемент списка
			$(elem).append('<button class="rem">X</button>'); //добавляется кнопка удаления
			$('#mylist').append(elem); //элемент списка добавляется к листу
			$('input').val(''); //очищает input
			$('.rem').on('click', function() { //функция для кнопки удаления
				$(this).parent().remove(); //this - обращение к текущему элементу(.rem)
			});
		}
	});
});



///////......Эффекты....../////////////

// функции для скрытия и отображения
$('#hide').on('click', function () {
	$('.block').hide(1000);
});
$('#show').on('click', function () {
	$('.block').show(1000); //Значение в милисекундах
});
// функция для переключения
$('#toggle').on('click', function() {
	$('.block2').toggle(1000, function(){
		$('.block2').show(1000);
	});
});// в качестве второго аргумента можно вызвать callback
// callback выполняется после анимации функции

//переключение постепенно исчезновения и появления
$('#fadeToggle').on('click', function() {
	$('.block3').fadeToggle(1000);//здесь также можно добавить callback
});//также можно отдельно использовать fadeIn & fadeOut

//эта функция может переключить к заданной прозрачности
$('#fadeTo').on('click', function(){
	$('.block4').fadeTo(1000, 0.4);//второй параметр opacity
});

// создание эффекта скольжения slideUp() & slideDown() & slideToggle()
$('#slideToggle').on('click', function(){
	$('.block5').slideToggle(1000);
});//эффект выдвижения
$('#slideToggle').on('click', function(){
	$('.block5').slideDown(1000, function() {
		$('.block5').fadeOut(1000);
	}); //здесь блоку поставил display: none
}); //и теперь он выдвигается и потом исчезает

///////......Анимация....../////////////

$('.block6').click(function() {
	$('.block6').animate({
		width: 300,
		height: 200,
		borderWidth: 40,
		fontSize: 90,
		opacity: 0.4,
		left: 300,
		bottom: 300
	}, 1000, 'linear', function() {
		$(this).fadeOut();
	});
});

//очередь анимации//
$('.block7')
.animate({opacity: 0.5}, 1000)
.animate({height: '+=100px', width: '+=100px'}, 1000)
.animate({left: 200, bottom: 200}, 1500)
.animate({height: "+100px", width: '+=100px'}, 1000, function(){
	$(this).click(function(){
		$(this).fadeOut();
	});
});
/// также может принимать функцию callback после продолжительности
// да и любую функцию